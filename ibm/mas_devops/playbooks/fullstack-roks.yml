---
- hosts: localhost
  any_errors_fatal: true

# 1. Deploy & configure the cluster
# -----------------------------------------------------------------------------
# To deploy GPU worker nodes set OCP_PROVISION_GPU flag, and GPU_WORKERS if deploying more than 1 gpu nodes
- name: Deploy ROKS cluster in IBM Cloud
  import_playbook: ocp/provision-roks.yml

- name: Login & configure OCP cluster
  import_playbook: ocp/configure-ocp.yml
  vars:
    cluster_type: roks
    prometheus_storage_class: ibmc-block-gold
    prometheus_alertmgr_storage_class: ibmc-file-gold-gid


# 2. Default Cluster Secret Hack for CP4D
# -----------------------------------------------------------------------------
# Note: We will perform this hack even when installing cp4d v3, for which it's
# not technically necessary, but it does not harm other than adding some time to
# the overall playbook run.  The extra complexity of deciding when to run this
# is not worth the overhead for this sample end-to-end playbook.
#
# We hope to find out how to avoid doing this entirely in the new year, as it
# shouldn't be a requirement to restart worker nodes and modify the default image
# pull secret to use any containerized software.
- name: Update default cluster pull secret and reboot all worker nodes
  import_playbook: cp4d/hack-worker-nodes.yml
  vars:
    cluster_type: roks


# 3. Install MongoDb
# -----------------------------------------------------------------------------
- name: Install MongoDb (Community Edition)
  import_playbook: dependencies/install-mongodb-ce.yml
  vars:
    mongodb_storage_class: ibmc-block-gold


# 4. Install AMQ Streams
# -----------------------------------------------------------------------------
- name: Install AMQ Streams (Apache Kafka)
  import_playbook: dependencies/install-amqstreams.yml
  vars:
    kafka_storage_class: ibmc-block-gold


# 5. Install all CP4D services - this will take a long time!
# -----------------------------------------------------------------------------
- name: Install CP4D services
  import_playbook: cp4d/install-services-fullstack.yml
  vars:
    mas_channel: "{{ lookup('env', 'MAS_CHANNEL') | default('8.x', True) }}" #  when defined, it will automatically install a cpd version that is compatible with the chosen mas_channel
    cpd_storage_class: ibmc-file-gold-gid


# 6. Create DB2 Warehouse instance for Manage (wsapp scope)
# -----------------------------------------------------------------------------
- name: Create DB2 Warehouse instance for Manage (wsapp scope)
  import_playbook: cp4d/create-db2-instance.yml
  vars:
    db2wh_instance_name: db2w-shared
    db2wh_meta_storage_class: ibmc-file-silver-gid
    db2wh_user_storage_class: ibmc-file-gold-gid
    db2wh_backup_storage_class: ibmc-file-gold-gid
    db2wh_logs_storage_class: ibmc-file-silver-gid # only applicable for cp4d 4.0
    db2wh_temp_storage_class: ibmc-file-silver-gid # only applicable for cp4d 4.0
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"
    mas_config_scope: system


# 7. Install SLS
# -----------------------------------------------------------------------------
- name: Install SLS
  import_playbook: dependencies/install-sls.yml
  vars:
    sls_storage_class: ibmc-file-gold-gid
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

    # Use the generated mongodb configuration
    mongodb_namespace: "{{ lookup('env', 'MONGODB_NAMESPACE') | default('mongoce', True) }}"
    sls_mongodb_cfg_file: "{{ mas_config_dir }}/mongo-{{ mongodb_namespace }}.yml"


# 8. Install UDS
# -----------------------------------------------------------------------------
- name: Install UDS
  import_playbook: dependencies/install-uds.yml
  vars:
    uds_storage_class: "ibmc-block-bronze"


# 9. Install AppConnect
# -----------------------------------------------------------------------------
- name: Install AppConnect
  import_playbook: dependencies/install-appconnect.yml
  vars:
    appconnect_storage_class: 'ibmc-file-gold-gid'


# 10. Install NVIDIA GPU and NFD Operators for Visual Inspection
# -----------------------------------------------------------------------------
- name: Install NVIDIA GPU Operator
  import_playbook: dependencies/install-gpu.yml


# 11. Tune the Db2 instance
# -----------------------------------------------------------------------------
# Temporary hack for Manage, because the operator is missing critical
# database configuration that requires manual intervention to set up.
- name: Db2 configuration hack for Manage
  import_playbook: mas/hack-manage-db2.yml
  vars:
    db2wh_instance_name: db2w-shared


# 12. Generate a Workspace
# -----------------------------------------------------------------------------
- name: Generate Workspace Configuration
  import_playbook: mas/gencfg-workspace.yml
  vars:
    # Note: If you change the ID of the workspace, make sure to also update it
    # in subsequent roles as well
    mas_workspace_name: "MAS Development"
    mas_workspace_id: masdev


# 13. Install & configure MAS
# -----------------------------------------------------------------------------
- name: Install & configure MAS
  import_playbook: mas/install-suite.yml
  vars:
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"


# 14. Install & Configure Manage application
# -----------------------------------------------------------------------------
- name: Install Manage
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: manage
- name: Configure Manage
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: manage
    mas_workspace_id: masdev


# 15. Install & Configure IoT application
# -----------------------------------------------------------------------------
- name: Install & configure IoT
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: iot
- name: Configure IoT
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: iot
    mas_workspace_id: masdev


# 16. Install & Configure Monitor application
# -----------------------------------------------------------------------------
- name: Install & configure Monitor
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: monitor
- name: Configure Monitor
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: monitor
    mas_workspace_id: masdev


# 17. Install & Configure Maximo Scheduler Optimization application
# -----------------------------------------------------------------------------
- name: Install & configure MSO
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: mso
- name: Configure MSO
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: mso
    mas_workspace_id: masdev


# 18. Install & Configure Predict application
# -----------------------------------------------------------------------------
- name: Install & configure Predict
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: predict
- name: Configure Predict
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: predict
    mas_workspace_id: masdev


# 19. Install & Configure Safety application
# -----------------------------------------------------------------------------
- name: Install & configure Safety
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: safety
- name: Configure Safety
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: safety
    mas_workspace_id: masdev


# 20. Install & Configure MVI application
# -----------------------------------------------------------------------------
- name: Install Maximo Visual Inspection
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: visualinspection
    mas_app_spec:
      settings:
        storage:
          size: 100Gi
          storageClassName': ibmc-file-gold
# add to mas_app_spec such as to configure the binding for Edge addon if needed when creating your own playbooks.

- name: Configure Maximo Visual Inspection
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: visualinspection
    mas_workspace_id: masdev


# 21. Install & Configure Health-Predict Utilities application
# -----------------------------------------------------------------------------
- name: Install & configure Health-Predict Utilities
  import_playbook: mas/install-app.yml
  vars:
    mas_app_id: hputilities
- name: Configure Health-Predict Utilities
  import_playbook: mas/configure-app.yml
  vars:
    mas_app_id: hputilities
    mas_workspace_id: masdev
